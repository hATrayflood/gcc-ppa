#! /bin/sh -e

# DP: Fix PR java/32862, bugs in EnumMap implementation.

dir=
if [ $# -eq 3 -a "$2" = '-d' ]; then
    pdir="-d $3"
    dir="$3/"
elif [ $# -ne 1 ]; then
    echo >&2 "`basename $0`: script expects -patch|-unpatch as argument"
    exit 1
fi
case "$1" in
    -patch)
        patch $pdir -f --no-backup-if-mismatch -p0 < $0
        ;;
    -unpatch)
        patch $pdir -f --no-backup-if-mismatch -R -p0 < $0
        ;;
    *)
        echo >&2 "`basename $0`: script expects -patch|-unpatch as argument"
        exit 1
esac
exit 0

2007-07-24  Tom Tromey  <tromey@redhat.com>

	PR java/32862:
	* java/util/EnumMap.java (get): Special case emptySlot.
	(clone): Rewrote.

--- libjava/classpath/java/util/EnumMap.java.orig	2007-07-06 20:42:04.000000000 +0200
+++ libjava/classpath/java/util/EnumMap.java	2007-07-26 21:24:48.000000000 +0200
@@ -1,5 +1,5 @@
 /* EnumMap.java - Map where keys are enum constants
-   Copyright (C) 2004, 2005 Free Software Foundation, Inc.
+   Copyright (C) 2004, 2005, 2007 Free Software Foundation, Inc.
 
 This file is part of GNU Classpath.
 
@@ -140,7 +140,8 @@
     Enum<K> e = (Enum<K>) key;
     if (e.getDeclaringClass() != enumClass)
       return null;
-    return store[e.ordinal()];
+    V o = store[e.ordinal()];
+    return o == emptySlot ? null : o;
   }
 
   public V put(K key, V value)
@@ -387,8 +388,18 @@
 
   public EnumMap<K, V> clone()
   {
-    /* This constructor provides this functionality */
-    return new EnumMap(this);
+    EnumMap<K, V> result;
+    try
+      {
+	result = (EnumMap<K, V>) super.clone();
+      }
+    catch (CloneNotSupportedException ignore)
+      {
+	// Can't happen.
+	result = null;
+      }
+    result.store = (V[]) store.clone();
+    return result;
   }
 
 }
