#! /bin/sh -e

# gdc-libphobos-std-format.dpatch by Arthur Loiret <arthur.loiret@gmail.com>
# DP: Replace assert by FormatError on untested archs.

dir=
if [ $# -eq 3 -a "$2" = '-d' ]; then
    pdir="-d $3"
    dir="$3/"
elif [ $# -ne 1 ]; then
    echo >&2 "`basename $0`: script expects -patch|-unpatch as argument"
    exit 1
fi
case "$1" in
    -patch)
        patch $pdir -f --no-backup-if-mismatch -p0 < $0
        #cd ${dir}gcc && autoconf2.59
        ;;
    -unpatch)
        patch $pdir -f --no-backup-if-mismatch -R -p0 < $0
        #rm ${dir}gcc/configure
        ;;
    *)
        echo >&2 "`basename $0`: script expects -patch|-unpatch as argument"
        exit 1
esac
exit 0


--- gcc/d/phobos/std/format.d	2007-11-06 21:02:55.000000000 +0000
+++ gcc/d/phobos/std/format.d	2007-11-06 21:10:56.000000000 +0000
@@ -962,13 +962,9 @@
 			// Structs are pass-by-reference in V4 ABI
 			s = tis.xtoString(va_arg!(void*)(argptr));
 		    }
-		    else version(X86_64)
-		    {
-			throw new FormatError("cannot portably format a struct on this target");
-		    }
 		    else
 		    {
-			static assert(0, "unimplemented");
+			throw new FormatError("cannot portably format a struct on this target");
 		    }
 		}
 		else
--- gcc/d/phobos2/std/format.d	2007-11-06 21:03:08.000000000 +0000
+++ gcc/d/phobos2/std/format.d	2007-11-06 21:11:30.000000000 +0000
@@ -963,13 +963,9 @@
 			// Structs are pass-by-reference in V4 ABI
 			s = tis.xtoString(va_arg!(void*)(argptr));
 		    }
-		    else version(X86_64)
-		    {
-			throw new FormatError("cannot portably format a struct on this target");
-		    }
 		    else
 		    {
-			static assert(0, "unimplemented");
+			throw new FormatError("cannot portably format a struct on this target");
 		    }
 		}
 		else
