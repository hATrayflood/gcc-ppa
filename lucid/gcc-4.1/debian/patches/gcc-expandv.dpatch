#! /bin/sh -e

# DP: * gcc.c (main): Call expandargv.

dir=
if [ $# -eq 3 -a "$2" = '-d' ]; then
    pdir="-d $3"
    dir="$3/"
elif [ $# -ne 1 ]; then
    echo >&2 "`basename $0`: script expects -patch|-unpatch as argument"
    exit 1
fi
case "$1" in
    -patch)
        patch $pdir -f --no-backup-if-mismatch -p0 < $0
        ;;
    -unpatch)
        patch $pdir -f --no-backup-if-mismatch -R -p0 < $0
        ;;
    *)
        echo >&2 "`basename $0`: script expects -patch|-unpatch as argument"
        exit 1
esac
exit 0

2005-11-27  Mark Mitchell  <mark@codesourcery.com>

	* gcc.c (main): Change type of argv to "char **".

2005-11-23  Mark Mitchell  <mark@codesourcery.com>

	* gcc.c (main): Call expandargv.

Index: gcc/gcc.c
===================================================================
--- gcc/gcc.c	(Revision 121121)
+++ gcc/gcc.c	(Revision 121122)
@@ -6057,10 +6057,10 @@
   kill (getpid (), signum);
 }
 
-extern int main (int, const char **);
+extern int main (int, char **);
 
 int
-main (int argc, const char **argv)
+main (int argc, char **argv)
 {
   size_t i;
   int value;
@@ -6081,6 +6081,8 @@
 
   prune_options (&argc, &argv);
 
+  expandargv (&argc, &argv);
+
 #ifdef GCC_DRIVER_HOST_INITIALIZATION
   /* Perform host dependent initialization when needed.  */
   GCC_DRIVER_HOST_INITIALIZATION;
@@ -6173,7 +6175,7 @@
      Make a table of specified input files (infiles, n_infiles).
      Decode switches that are handled locally.  */
 
-  process_command (argc, argv);
+  process_command (argc, (const char **) argv);
 
   /* Initialize the vector of specs to just the default.
      This means one element containing 0s, as a terminator.  */
