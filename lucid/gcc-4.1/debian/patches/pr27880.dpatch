#! /bin/sh -e

# DP: Backport of PR target/27880 to the gcc-4_1-branch.

dir=
if [ $# -eq 3 -a "$2" = '-d' ]; then
    pdir="-d $3"
    dir="$3/"
elif [ $# -ne 1 ]; then
    echo >&2 "`basename $0`: script expects -patch|-unpatch as argument"
    exit 1
fi
case "$1" in
    -patch)
        patch $pdir -f --no-backup-if-mismatch -p0 < $0
        cd ${dir}gcc && autoconf2.59
        ;;
    -unpatch)
        patch $pdir -f --no-backup-if-mismatch -R -p0 < $0
        rm ${dir}gcc/configure
        ;;
    *)
        echo >&2 "`basename $0`: script expects -patch|-unpatch as argument"
        exit 1
esac
exit 0

From: Steve Ellcey <sje@cup.hp.com>
Sender: gcc-patches-owner@gcc.gnu.org
To: gcc-patches@gcc.gnu.org
Subject: Patch for PR target/27880 (Use of _Unwind_GetIPInfo)
Date: Fri, 6 Oct 2006 14:07:57 -0700 (PDT)

In addition to the uses of _Unwind_GetIPInfo that are in libstdc++ and
libjava (already fixed), there is a use of it in unwind-c.c which is
compiled into libgcc on IA64 Linux when using --with-system-libunwind.

This patch is to ifdef that use of _Unwind_GetIPInfo so that when
--with-system-libunwind is specified and the system unwind library does
not contain _Unwind_GetIPInfo we will not generate any uses of it.

For any cross-build, we assume that _Unwind_GetIPInfo exists.

I am regression testing now (with and without --with-system-libunwind),
OK for checkin on main line if testing goes OK?

Steve Ellcey
sje@cup.hp.com



2006-10-06  Steve Ellcey  <sje@cup.hp.com>

	PR target/27880
	* configure.ac (HAVE_GETIPINFO): Check for _Unwind_GetIPInfo.
	* unwind-c.c (PERSONALITY_FUNCTION): Ifdef use of _Unwind_GetIPInfo.

Index: unwind-c.c
===================================================================
--- gcc/unwind-c.c	(revision 117385)
+++ gcc/unwind-c.c	(working copy)
@@ -157,7 +157,11 @@ PERSONALITY_FUNCTION (int version,
 
   /* Parse the LSDA header.  */
   p = parse_lsda_header (context, language_specific_data, &info);
+#ifdef HAVE_GETIPINFO
   ip = _Unwind_GetIPInfo (context, &ip_before_insn);
+#else
+  ip = _Unwind_GetIP (context);
+#endif
   if (! ip_before_insn)
     --ip;
   landing_pad = 0;
