#! /bin/sh -e

# DP: PR middle-end/26379 (ice-on-vaild-code, regression), gcc-4_0-branch

dir=
if [ $# -eq 3 -a "$2" = '-d' ]; then
    pdir="-d $3"
    dir="$3/"
elif [ $# -ne 1 ]; then
    echo >&2 "`basename $0`: script expects -patch|-unpatch as argument"
    exit 1
fi
case "$1" in
    -patch)
        patch $pdir -f --no-backup-if-mismatch -p0 < $0
        ;;
    -unpatch)
        patch $pdir -f --no-backup-if-mismatch -R -p0 < $0
        ;;
    *)
        echo >&2 "`basename $0`: script expects -patch|-unpatch as argument"
        exit 1
esac
exit 0

2006-03-16  Roger Sayle  <roger@eyesopen.com>

        PR middle-end/26379
        Backport from mainline.
        2006-02-21  Jakub Jelinek  <jakub@redhat.com>
        * combine.c (simplify_shift_const_1): Disable nested shifts
        optimization for vector shifts.

2006-03-16  Roger Sayle  <roger@eyesopen.com>

	Backport from mainline.
	PR middle-end/26379
	2006-02-21  Jakub Jelinek  <jakub@redhat.com>
	* gcc.target/i386/mmx-7.c: New test.

Index: gcc/testsuite/gcc.target/i386/mmx-7.c
===================================================================
--- gcc/testsuite/gcc.target/i386/mmx-7.c	(revision 0)
+++ gcc/testsuite/gcc.target/i386/mmx-7.c	(revision 112152)
@@ -0,0 +1,18 @@
+/* PR middle-end/26379 */
+/* { dg-do compile } */
+/* { dg-options "-O2 -mmmx" } */
+
+#include <mmintrin.h>
+
+void
+foo (__m64 *p)
+{
+  __m64 m;
+
+  m = p[0];
+  m = _mm_srli_pi16(m, 2);
+  m = _mm_slli_pi16(m, 8);
+
+  p[0] = m;
+  _mm_empty();
+}
Index: gcc/combine.c
===================================================================
--- gcc/combine.c	(revision 112151)
+++ gcc/combine.c	(revision 112152)
@@ -8790,7 +8790,8 @@
 	      && INTVAL (XEXP (varop, 1)) >= 0
 	      && INTVAL (XEXP (varop, 1)) < GET_MODE_BITSIZE (GET_MODE (varop))
 	      && GET_MODE_BITSIZE (result_mode) <= HOST_BITS_PER_WIDE_INT
-	      && GET_MODE_BITSIZE (mode) <= HOST_BITS_PER_WIDE_INT)
+	      && GET_MODE_BITSIZE (mode) <= HOST_BITS_PER_WIDE_INT
+	      && !VECTOR_MODE_P (result_mode))
 	    {
 	      enum rtx_code first_code = GET_CODE (varop);
 	      unsigned int first_count = INTVAL (XEXP (varop, 1));
