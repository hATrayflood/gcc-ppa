# -*- makefile -*-
# rules to patch the unpacked files in the source directory
# ---------------------------------------------------------------------------
# various rules to unpack addons and (un)apply patches.
# 	- patch / apply-patches
#	- unpatch / reverse-patches

.NOTPARALLEL:

patchdir	= debian/patches

# which patches should be applied?
debian_patches = \
	gcc-version \
	gcc-textdomain \
	rename-info-files \
	libstdc++-pic \
	libstdc++-doclink \
	amd64-specs \
	gccbug \
	gccbug-posix \
	boehm-gc-nocheck \
	acats-expect \
	fastjar-version \
	libstdc++-doxygen \
	arm-bigendian \
	pr18859 \
	pr19877 \
	pr20297 \
	pr26379 \
	pr26557 \
	pr25917 \
	prcxxices \
	323016 \
	classpath-20050618 \
	classmap-path \
	xml-update-20050930 \
	gcc-m68k-update \
	libjava-awt-name \
	libjava-awt-peer-gtk \
	libjava-dlsearch-path \
	libjava-streamserializer \
	libjava-saxdriver-fix \
	libjava-xml-transform \
	libjava-hppa \
	arm-libffi \
	arm-gij \
	pr13212 \
	proto-dep \
	gcc-sparc-update \
	hppa-cbranch \
	hppa-cbranch2 \

#	cvs-updates \


ifeq ($(with_multiarch_inc),yes)
  debian_patches += multiarch-include
endif
ifeq ($(with_multiarch_lib),yes)
  debian_patches += multiarch-lib
endif

ifeq ($(with_libffi),yes)
  ifneq ($(with_java),yes)
    debian_patches += libffi-without-libgcj
  endif
endif

ifeq ($(with_java),yes)
  ifeq ($(with_separate_libgcj),yes)
    ifneq (,$(findstring gcc-4, $(PKGSOURCE)))
      debian_patches += disable-libgcj
    endif
  endif
endif

ifeq ($(with_proto),yes)
  debian_patches += deb-protoize
endif

ifeq ($(with_objc),yes)
  debian_patches += # libobjc
endif

ifeq ($(with_ada),yes)
  ifeq ($(with_libgnat),yes)
    debian_patches += ada-link-lib
  endif
  debian_patches += ada-gcc-name #ada-names
  ifeq ($(DEB_TARGET_ARCH)-$(distribution),ia64-Debian)
    debian_patches += ignore-comp-fail
  endif
endif

ifeq ($(with_pascal),yes)
  debian_patches += gpc-3.x gpc-updates
  debian_patches += gpc-names gpc-test-summary gpc-profiled
  ifneq ($(with_gpidump),yes)
    debian_patches += gpc-no-gpidump
  endif
endif

ifeq ($(DEB_TARGET_ARCH_OS),hurd)
  debian_patches += hurd-changes
endif

ifeq ($(DEB_TARGET_ARCH),alpha)
  debian_patches += alpha-ieee
endif

ifneq (,$(findstring /$(DEB_TARGET_ARCH)/,/mips/mipsel/))
  debian_patches += libffi-mips libmudflap-entry-point libmudflap-mips
endif

ifeq ($(DEB_TARGET_ARCH_OS),kfreebsd)
  debian_patches += kbsd-gnu-ada
endif
ifeq ($(DEB_TARGET_ARCH_OS),knetbsd)
  debian_patches += # kbsd-gnu
endif
ifeq ($(DEB_TARGET_ARCH_OS),netbsd)
  debian_patches += # netbsd-all-gcc netbsd-archs-gcc
endif
ifeq ($(DEB_TARGET_ARCH),sparc)
  debian_patches += sparc-niagara
endif

ifdef DEB_CROSS
  debian_patches += cross-configure cross-include
endif

# not applied by default
#debian_patches += protector

debian_patches += link-libs

# all patches below this line are applied for gcc-snapshot builds as well

ifeq ($(PKGSOURCE),gcc-snapshot)
  debian_patches =
endif

debian_patches += cpu-default-i486 reporting gcc-ice-hack

ifeq ($(with_java_biarch_awt),yes)
  debian_patches += libjava-biarch-awt
endif

ifeq ($(biarch),yes)
  ifeq (,$(findstring libjava, $(biarch_multidir_names)))
    debian_patches += disable-biarch-check
  endif
  debian_patches += biarch-include config-ml

  ifeq ($(DEB_TARGET_ARCH),powerpc)
    debian_patches += powerpc-biarch
  endif
  ifeq ($(DEB_TARGET_ARCH),s390)
    debian_patches += s390-biarch
  endif
  ifeq ($(DEB_TARGET_ARCH),sparc)
      debian_patches += sparc-biarch
  endif
  ifeq ($(DEB_TARGET_ARCH),i386)
    debian_patches += i386-biarch
  endif
  ifneq ($(with_64bit_check),yes)
    debian_patches += disable-configure-run-check
  endif
endif

ifeq ($(biarch32),yes)
  ifeq (,$(findstring libjava, $(biarch_multidir_names)))
    debian_patches += disable-biarch-check
  endif
  ifeq ($(distribution)-$(DEB_TARGET_ARCH),Ubuntu-amd64)
    debian_patches += disable-biarch-check-mf
  endif
  debian_patches += biarch-include config-ml

  ifeq ($(DEB_TARGET_ARCH),amd64)
    debian_patches += amd64-biarch
    debian_patches += libjava-ia32fix
  endif
  ifeq ($(DEB_TARGET_ARCH),ppc64)
    # FIXME: needed for 4.1?
    debian_patches += ppc64-biarch ppc64-ada
  endif
  ifneq ($(with_32bit_check),yes)
    debian_patches += disable-configure-run-check
  endif
endif


patch: $(patch_stamp)
$(patch_stamp): $(unpack_stamp) pre-patch \
    $(foreach p,$(debian_patches),$(patch_stamp)-$(p))
	echo -e "\nPatches that Debian applied in this version:" > pxxx
	for i in $(debian_patches); do \
	  echo -e "\n$$i:" >> pxxx; \
	  sed -n 's/^# *DP: */  /p' $(patchdir)/$$i.dpatch >> pxxx; \
	done
	mv -f pxxx $@

pre-patch:
	@if [ -x /usr/bin/automake-1.4 ]; then \
	  : ; \
	else \
	  mkdir -p $(PWD)/bin; \
	  ln -sf /usr/bin/automake $(PWD)/bin/automake-1.4; \
	fi

unpatch:
	for stamp in none `ls -1t $(patch_stamp)-*`; do \
	  case "$$stamp" in none|patched-stamp|patched-\*) continue; esac; \
	  patch=`echo $$stamp | sed -e 's,$(patch_stamp)-,,'`; \
	  echo "trying to revert patch $$patch ..."; \
	  if [ -x $(patchdir)/$$patch.dpatch ]; then true; else \
	    chmod +x $(patchdir)/$$patch.dpatch; fi; \
	  if $(patchdir)/$$patch.dpatch -unpatch -d $(srcdir); then \
	    echo "reverted $$patch patch."; \
	    rm -f $$stamp; \
	  else \
	    echo "error in reverting $$patch patch."; \
	    exit 1; \
	  fi; \
	done
	rm -f patched-stamp

# debian/rules.conf isn't yet sourced
SOURCE_VERSION := $(shell dpkg-parsechangelog | awk '/^Version:/ {print $$NF}')
DEB_VERSION := $(shell echo $(SOURCE_VERSION) | sed 's/ds[0-9]*//')

$(patch_stamp)-%: $(patchdir)/%.dpatch
	if [ -x $< ]; then true; else chmod +x $<; fi
	if [ -f $@ ]; then \
	  echo "$* patches already applied."; exit 1; \
	fi
	DEB_VERSION='$(DEB_VERSION)'; export DEB_VERSION; \
	$< -patch -d $(srcdir)
	echo "$* patches applied." > $@
