#! /bin/sh -e

dir=
if [ $# -eq 3 -a "$2" = '-d' ]; then
    pdir="-d $3"
    dir="$3/"
elif [ $# -ne 1 ]; then
    echo >&2 "`basename $0`: script expects -patch|-unpatch as argument"
    exit 1
fi
case "$1" in
    -patch)
        patch $pdir -f --no-backup-if-mismatch -p1 < $0
        cd ${dir}libmudflap && autoconf
        ;;
    -unpatch)
        patch $pdir -f --no-backup-if-mismatch -R -p1 < $0
        rm -f ${dir}libmudfflap/configure
        ;;
    *)
        echo >&2 "`basename $0`: script expects -patch|-unpatch as argument"
        exit 1
esac
exit 0

# DP: [PATCH] MIPS/mudflap: Incorrect name of the entry point

From: "Maciej W. Rozycki" <macro@linux-mips.org>
Sender: gcc-patches-owner@gcc.gnu.org
To: gcc-patches@gcc.gnu.org
Subject: [PATCH] MIPS/mudflap: Incorrect name of the entry point
Date: Mon, 6 Jun 2005 20:01:05 +0100 (BST)

Hello,

 Most test cases for libmudflap fail for MIPS (used the mipsel-linux 
target) because there is no symbol named "_start".  That's because the 
name of the symbol used for the entry point is different on this platform.

 Here is a fix.  It introduces an autoconf test for the entry point and 
therefore it permits easy addition of other names if there is such a need.  
Conveniently the test aborts the script if no known symbol is found for 
the need to be easily identified.  With the patch and 4.0.0 I get the 
libmudflap summary changed from:

# of expected passes            94
# of unexpected failures        646

to:

# of expected passes            696
# of unexpected failures        592

2005-06-06  Maciej W. Rozycki  <macro@linux-mips.org>

	* configure.ac: Test for the name of the symbol used for the entry 
	point; define ENTRY_POINT to the result.
	* configure: Regenerate.
	* config.h.in: Regenerate.
	* mf-heuristics.c: Replace _start with ENTRY_POINT throughout.

 Please apply to the HEAD.

  Maciej

gcc-4.0.0-mudflap-entry.patch
diff -up --recursive --new-file gcc-4.0.0.macro/libmudflap/configure.ac gcc-4.0.0/libmudflap/configure.ac
--- gcc-4.0.0.macro/libmudflap/configure.ac	2005-01-02 22:24:50.000000000 +0000
+++ gcc-4.0.0/libmudflap/configure.ac	2005-06-05 22:25:20.000000000 +0000
@@ -225,6 +225,21 @@ AC_MSG_RESULT($ac_fdsections)
 AC_SUBST(SECTION_FLAGS)
 
 
+# Check for the name of the symbol used for the entry point.
+AC_CACHE_CHECK([for the name of the symbol used for the entry point],
+  [mudflap_cv_entry_point], [
+for name in _start __start unknown; do
+  AC_LINK_IFELSE([AC_LANG_PROGRAM([extern char $name;], [$name = 0;])],
+		 [break])
+done
+mudflap_cv_entry_point="$name"])
+if test "$mudflap_cv_entry_point" = unknown; then
+  AC_MSG_ERROR([none of the known symbol names works])
+fi
+AC_DEFINE_UNQUOTED([ENTRY_POINT], [$mudflap_cv_entry_point],
+  [Define to the name of the symbol used for the entry point.])
+
+
 if test ${multilib} = yes; then
   multilib_arg="--enable-multilib"
 else
diff -up --recursive --new-file gcc-4.0.0.macro/libmudflap/mf-heuristics.c gcc-4.0.0/libmudflap/mf-heuristics.c
--- gcc-4.0.0.macro/libmudflap/mf-heuristics.c	2004-05-13 06:41:03.000000000 +0000
+++ gcc-4.0.0/libmudflap/mf-heuristics.c	2005-06-05 22:19:04.000000000 +0000
@@ -43,7 +43,7 @@ Software Foundation, 59 Temple Place - S
 
 
 extern char _end;
-extern char _start;
+extern char ENTRY_POINT;
 
 
 /* Run some quick validation of the given region.  
@@ -164,10 +164,11 @@ __mf_heuristic_check (uintptr_t ptr, uin
     }
 
 
-  /* The third heuristic is to approve all accesses between _start and _end,
-     which should include all text and initialized data.  */
+  /* The third heuristic is to approve all accesses between _start (or its
+     equivalent for the given target) and _end, which should include all
+     text and initialized data.  */
   if (__mf_opts.heur_start_end)
-    if (ptr >= (uintptr_t) & _start && ptr_high <= (uintptr_t) & _end)
+    if (ptr >= (uintptr_t) & ENTRY_POINT && ptr_high <= (uintptr_t) & _end)
       return 1; /* uncacheable */
 
   return 0; /* unknown */
