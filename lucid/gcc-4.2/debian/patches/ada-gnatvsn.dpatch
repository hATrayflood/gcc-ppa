#! /bin/sh -e

# DP: proposed patch for PR ada/27194.

dir=
if [ $# -eq 3 -a "$2" = '-d' ]; then
    pdir="-d $3"
    dir="$3/"
elif [ $# -ne 1 ]; then
    echo >&2 "`basename $0`: script expects -patch|-unpatch as argument"
    exit 1
fi
case "$1" in
    -patch)
        patch $pdir -f --no-backup-if-mismatch -p0 < $0
        ;;
    -unpatch)
        patch $pdir -f --no-backup-if-mismatch -R -p0 < $0
        ;;
    *)
        echo >&2 "`basename $0`: script expects -patch|-unpatch as argument"
        exit 1
esac
exit 0

--- orig/gnatvsn.ads	2005-11-15 14:59:02.000000000 +0100
+++ gcc/ada/gnatvsn.ads	2006-04-18 10:00:37.010002000 +0200
@@ -67,7 +67,7 @@
    --    GAP
    --       GNAT Academic Program, similar to Public.
 
-   Ver_Len_Max : constant := 32;
+   Ver_Len_Max : constant := 64;
    --  Longest possible length for Gnat_Version_String in this or any
    --  other version of GNAT. This is used by the binder to establish
    --  space to store any possible version string value for checks. This
--- orig/gnatvsn.adb	2005-07-01 03:29:17.000000000 +0200
+++ gcc/ada/gnatvsn.adb	2006-04-18 10:00:05.100002000 +0200
@@ -54,12 +54,13 @@
    -------------------------
 
    function Gnat_Version_String return String is
-      NUL_Pos : Positive := 1;
+      NUL_Pos : Positive := Version_String'Last;
    begin
-      loop
-         exit when Version_String (NUL_Pos) = ASCII.NUL;
-
-         NUL_Pos := NUL_Pos + 1;
+      for J in Version_String'Range loop
+         if Version_String (J) = ASCII.NUL then
+            NUL_Pos := J;
+            exit;
+         end if;
       end loop;
 
       return Version_String (1 .. NUL_Pos - 1);
