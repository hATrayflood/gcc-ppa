# -*- makefile -*-
# rules to patch the unpacked files in the source directory
# ---------------------------------------------------------------------------
# various rules to unpack addons and (un)apply patches.
# 	- patch / apply-patches
#	- unpatch / reverse-patches

.NOTPARALLEL:

patchdir	?= debian/patches

# which patches should be applied?

#debian_patches = \
#	svn-updates

ifneq ($(GFDL_INVARIANT_FREE),yes)
#  debian_patches += svn-doc-updates
endif

#ifeq ($(with_java),yes)
#  debian_patches += \
#	svn-class-updates
#endif

ifneq ($(GFDL_INVARIANT_FREE),yes)
  debian_patches += \
	rename-info-files \
	gcc-directives-only-doc \
	sparc-niagara2-doc \
	i386-biarch-doc
#	svn-doc-updates
endif

debian_patches += \
	gcc-version \
	gcc-textdomain \
	gcc-driver-extra-langs \
	gcc-hash-style-both \
	libstdc++-pic \
	libstdc++-doclink \
	libstdc++-doxygen \
	libjava-stacktrace \
	libjava-subdir \
	libjava-jnipath \
	libjava-sjlj \
	libjava-rpath \
	libjava-jar \
	libjava-nojavac \
	libjava-armel-ldflags \
	libjava-xulrunner1.9 \
	libjava-extra-cflags \
	libgcj-bc \
	libffi-configure \
	pr20218 \
	pr20218-mips \
	pr28102 \
	pr22244 \
	pr30961 \
	libgcc-tramp-ppc32 \
	gcc-directives-only \
	sparc-niagara2 \
	alpha-no-ev4-directive \
	boehm-gc-nocheck \
	boehm-gc-getnprocs \
	note-gnu-stack \
	arm-pr28516 \
	arm-pr30486 \
	arm-unbreak-eabi-armv4t \
	hurd-profiling \
	hurd-fast-math \
	m68k-fjump \
	m68k-save_pic \
	m68k-dwarf \
	m68k-split_shift \
	m68k-limit_reload \
	m68k-prevent-qipush \
	m68k-return \
	m68k-jumptable \
	m68k-sig-unwind \
	m68k-peephole \
	m68k-align-code \
	m68k-align-stack \
	m68k-secondary-addr-reload \
	m68k-notice-move \
	m68k-fpcompare \
	m68k-symbolic-operand \
	m68k-bitfield-offset \
	mips-libspec \
	pr24170 \
	pr32889 \
	pr28322 \
	libobjc-gc-link \
	pr35020 \
	pr36634 \
	pr35432 \
	pr37101 \
	pr28482 \
	pr35437 \
	pr37544 \
	pr36575 \
	pr37731 \
	pr8995 \
	libjava-javah-bridge-tgts \

#	svn-updates \
#	classmap-path \

#ifneq ($(GFDL_INVARIANT_FREE),yes)
#  debian_patches += classpath-tooldoc
#endif

ifeq ($(with_ssp)-$(with_ssp_default),yes-yes)
  debian_patches += gcc-ssp-default
endif

ifneq ($(distribution),Ubuntu)
  ifeq ($(with_ssp),yes)
    debian_patches += libssp-gnu
  endif
endif

ifeq ($(with_multiarch_lib),yes)
  debian_patches += multiarch-lib
endif

ifeq ($(with_java),yes)
  ifeq ($(with_native_ecj),yes)
    debian_patches += native-ecj
  endif
endif

ifeq ($(with_proto),yes)
  debian_patches += deb-protoize
endif

ifeq ($(with_ada),yes)
  debian_patches += \
	ada-driver-check \
	ada-gcc-name \
	ada-default-project-path \
	ada-symbolic-tracebacks \
	ada-acats

  ifeq ($(with_libgnat),yes)
    debian_patches += \
	ada-gnatvsn \
	ada-link-lib \
	ada-libgnatvsn \
	ada-libgnatprj \
	ada-sjlj
  endif
endif

# gcc-4.2 is not yet supported by gpc
ifeq ($(with_pascal),yes)
#  debian_patches += gpc-gcc-4.x gpc-4.1 gpc-names
else
#  debian_patches += gcc-pascal-lang
endif

ifeq ($(with_d),yes)
#  debian_patches += svn-gdc-updates
  debian_patches += gdc-4.2 gdc-4.2-build
  debian_patches += gdc-driver-zlib
  debian_patches += gdc-driver-defaultlib
  ifeq ($(with_libphobos),yes)
    debian_patches += gdc-libphobos-build
  else
    debian_patches += gdc-driver-nophobos
  endif
  debian_patches += gdc-fix-build
  debian_patches += gdc-libphobos-std-format
  debian_patches += gdc-arm-unwind_ptr
else
  debian_patches += gcc-d-lang
endif

ifeq ($(DEB_TARGET_ARCH_OS),hurd)
  debian_patches += hurd-changes
endif

ifeq ($(DEB_TARGET_ARCH),alpha)
  debian_patches += alpha-ieee mudflap-nocheck
  ifneq ($(GFDL_INVARIANT_FREE),yes)
    debian_patches += alpha-ieee-doc
  endif
endif

ifeq ($(DEB_TARGET_ARCH),ia64)
  debian_patches += pr27880
endif

ifeq ($(DEB_TARGET_ARCH),m68k)
  debian_patches += m68k-bitfield m68k-autoinc
  debian_patches += m68k-dwarf2 m68k-peephole-note
  debian_patches += m68k-prevent-swap m68k-reg-inc m68k-noautoinc-setjmp
endif

ifeq ($(DEB_TARGET_ARCH_OS),kfreebsd)
  debian_patches += kbsd-gnu
  debian_patches += kbsd-gnu-ada
endif
ifeq ($(DEB_TARGET_ARCH_OS),netbsd)
  debian_patches += # netbsd-all-gcc netbsd-archs-gcc
endif

ifdef DEB_CROSS
  debian_patches += cross-include cross-fixes
endif

#debian_patches += link-libs

# all patches below this line are applied for gcc-snapshot builds as well

ifeq ($(PKGSOURCE),gcc-snapshot)
  debian_patches =
endif

ifneq ($(DEB_TARGET_ARCH),lpia)
  debian_patches += cpu-default-i486
endif

debian_patches += reporting multiarch-include
debian_patches += gcc-ice-hack libjava-disable-static
debian_patches += gcc-ice-apport

ifeq ($(biarch),yes)
  ifeq (,$(findstring libjava, $(biarch_multidir_names)))
    debian_patches += libjava-nobiarch-check
  endif
  debian_patches += config-ml

  ifeq ($(DEB_TARGET_ARCH),powerpc)
    debian_patches += powerpc-biarch
  endif
  ifeq ($(DEB_TARGET_ARCH),s390)
    debian_patches += s390-biarch
  endif
  ifeq ($(DEB_TARGET_ARCH),sparc)
      debian_patches += sparc-biarch
  endif
  ifeq ($(DEB_TARGET_ARCH),i386)
    debian_patches += i386-biarch
  endif
  ifneq ($(with_64bit_check),yes)
    debian_patches += disable-configure-run-check
  endif
endif

ifeq ($(biarch32),yes)
  ifeq (,$(findstring libjava, $(biarch_multidir_names)))
    debian_patches += libjava-nobiarch-check
  endif
  debian_patches += config-ml gcc-multilib64dir

  ifeq ($(DEB_TARGET_ARCH),ppc64)
    debian_patches += ppc64-ada
  endif
  ifneq ($(with_32bit_check),yes)
    debian_patches += disable-configure-run-check
  endif
endif


firsthalf=true
patch-to-specific: $(foreach patch, $(debian_patches),$(if $(firsthalf),$(if $(findstring $(PATCH_TO),$(patch)),$(eval firsthalf=),$(patch_stamp)-$(patch)),))

patch: $(patch_stamp)
$(patch_stamp): $(unpack_stamp) pre-patch \
    $(foreach p,$(debian_patches),$(patch_stamp)-$(p))
	echo -e "\nPatches that $(distribution) applied in this version:" > pxxx
	for i in $(debian_patches); do \
	  echo -e "\n$$i:" >> pxxx; \
	  sed -n 's/^# *DP: */  /p' $(patchdir)/$$i.dpatch >> pxxx; \
	done
ifeq ($(with_libphobos),yes)
	[ ! -d $(srcdir)/libphobos ] || rm -rf $(srcdir)/libphobos
	mkdir $(srcdir)/libphobos && \
	  cd $(srcdir)/libphobos && \
	    ../symlink-tree ../gcc/d/phobos$(libphobos_version) 2>&1 && \
	cd $(srcdir)
	chmod a+x $(srcdir)/gcc/d/phobos$(libphobos_version)/config/x3
endif
	mv -f pxxx $@

pre-patch:
	@if [ -x /usr/bin/automake-1.4 ]; then \
	  : ; \
	else \
	  mkdir -p $(PWD)/bin; \
	  ln -sf /usr/bin/automake $(PWD)/bin/automake-1.4; \
	fi

unpatch:
	for stamp in none `ls -1t $(patch_stamp)-*`; do \
	  case "$$stamp" in none|patched-stamp|patched-\*) continue; esac; \
	  patch=`echo $$stamp | sed -e 's,$(patch_stamp)-,,'`; \
	  echo "trying to revert patch $$patch ..."; \
	  if [ -x $(patchdir)/$$patch.dpatch ]; then true; else \
	    chmod +x $(patchdir)/$$patch.dpatch; fi; \
	  if $(patchdir)/$$patch.dpatch -unpatch -d $(srcdir); then \
	    echo "reverted $$patch patch."; \
	    rm -f $$stamp; \
	  else \
	    echo "error in reverting $$patch patch."; \
	    exit 1; \
	  fi; \
	done
	rm -f patched-stamp

# debian/rules.conf isn't yet sourced
SOURCE_VERSION := $(call vafilt,$(CHANGELOG_VARS),Version)

$(patch_stamp)-%: $(patchdir)/%.dpatch
	@if [ -x $< ]; then true; else chmod +x $<; fi
	@if [ -f $@ ]; then \
	  echo "$* patches already applied."; exit 1; \
	fi
	DEB_VERSION=$$(echo $(SOURCE_VERSION) | sed 's/ds[0-9]*//'); \
	export DEB_VERSION; set -x; \
	$< -patch -d $(srcdir)
	@echo "$* patches applied." > $@
