# DP: Enable both gold and ld in a single toolchain (documentation).

2012-11-28   Nick Clifton  <nickc@redhat.com>
	     Matthias Klose <doko@debian.org>
	     Doug Kwan  <dougkwan@google.com>
	     H.J. Lu  <hongjiu.lu@intel.com>

	* collect2.c (main): Support -fuse-ld=bfd and -fuse-ld=gold.
	* exec-tool.in: Likewise.

	* common.opt: Add fuse-ld=bfd and fuse-ld=gold.

	* gcc.c (LINK_COMMAND_SPEC): Pass -fuse-ld=* to collect2.

	* opts.c (comman_handle_option): Ignore -fuse-ld=bfd and
	-fuse-ld=gold.

	* doc/invoke.texi: Document -fuse-ld=bfd and -fuse-ld=gold.

--- a/src/gcc/doc/invoke.texi
+++ b/src/gcc/doc/invoke.texi
@@ -425,7 +425,7 @@ Objective-C and Objective-C++ Dialects}.
 -funit-at-a-time -funroll-all-loops -funroll-loops @gol
 -funsafe-loop-optimizations -funsafe-math-optimizations -funswitch-loops @gol
 -fvariable-expansion-in-unroller -fvect-cost-model -fvpt -fweb @gol
--fwhole-program -fwpa -fuse-linker-plugin @gol
+-fwhole-program -fwpa -fuse-ld=@var{linker} -fuse-linker-plugin @gol
 --param @var{name}=@var{value}
 -O  -O0  -O1  -O2  -O3  -Os -Ofast -Og}

@@ -8419,6 +8419,12 @@ the comparison operation before register allocation is complete.

 Enabled at levels @option{-O}, @option{-O2}, @option{-O3}, @option{-Os}.

+@item -fuse-ld=gold
+Use the @command{gold} linker instead of the default linker.
+
+@item -fuse-ld=bfd
+Use the @command{ld.bfd} linker instead of the default linker.
+
 @item -fcprop-registers
 @opindex fcprop-registers
 After register allocation and post-register allocation instruction splitting,
